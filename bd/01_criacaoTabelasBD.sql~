--SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
--SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
--SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';


-- ALTERADO: T_ESPECIE_CAPTURADA SPC_PESO(KG) -> SPC_PESO_KG

-- select tablename, 'T' from pg_tables;
DROP TABLE IF EXISTS T_ALTERACAOSENHA CASCADE;
DROP TABLE IF EXISTS T_AREAPESCA CASCADE;
DROP TABLE IF EXISTS T_PESCADOR_HAS_T_AREAPESCA CASCADE;
DROP TABLE IF EXISTS T_ARTEPESCA CASCADE;
DROP TABLE IF EXISTS T_COLONIA CASCADE;
DROP TABLE IF EXISTS T_COMUNIDADE CASCADE;
DROP TABLE IF EXISTS T_DADOS_CALAO CASCADE;
DROP TABLE IF EXISTS T_DADOS_EMALHE CASCADE;
DROP TABLE IF EXISTS T_DADOS_TARRAFA CASCADE;
DROP TABLE IF EXISTS T_ENDERECO CASCADE;
DROP TABLE IF EXISTS T_ENTREVISTA_PESCADOR CASCADE;
DROP TABLE IF EXISTS T_ESCOLARIDADE CASCADE;
DROP TABLE IF EXISTS T_ESPECIE CASCADE;
DROP TABLE IF EXISTS T_FAMILIA CASCADE;
DROP TABLE IF EXISTS T_FICHA_DIARIA CASCADE;
DROP TABLE IF EXISTS T_GENERO CASCADE;
DROP TABLE IF EXISTS T_GRUPO CASCADE;
DROP TABLE IF EXISTS T_HISTORICORECADASTRAMENTO CASCADE;
DROP TABLE IF EXISTS T_ISCA CASCADE;
DROP TABLE IF EXISTS T_LOGIN CASCADE;
DROP TABLE IF EXISTS T_MARE CASCADE;
DROP TABLE IF EXISTS T_MONITORAMENTO CASCADE;
DROP TABLE IF EXISTS T_MUNICIPIO CASCADE;
DROP TABLE IF EXISTS T_ORDEM CASCADE;
DROP TABLE IF EXISTS T_PERFIL CASCADE;
DROP TABLE IF EXISTS T_PESCADOR CASCADE;
DROP TABLE IF EXISTS T_PESCADOR_HAS_T_COLONIA CASCADE;
DROP TABLE IF EXISTS T_PESCADOR_HAS_T_COMUNIDADE CASCADE;
DROP TABLE IF EXISTS T_PESCADOR_HAS_T_EMBARCACAO CASCADE;
DROP TABLE IF EXISTS T_PESCADOR_HAS_T_PROGRAMASOCIAL CASCADE;
DROP TABLE IF EXISTS T_PESCADOR_HAS_T_RENDA CASCADE;
DROP TABLE IF EXISTS T_PESCADOR_HAS_TT_DEPENDENTE CASCADE;
DROP TABLE IF EXISTS T_PORTEEMBARCACAO CASCADE;
DROP TABLE IF EXISTS T_PORTO CASCADE;
DROP TABLE IF EXISTS T_PROGRAMASOCIAL CASCADE;
DROP TABLE IF EXISTS T_RENDA CASCADE;
DROP TABLE IF EXISTS T_SITUACAO CASCADE;
DROP TABLE IF EXISTS T_SUBAMOSTRA CASCADE;
DROP TABLE IF EXISTS T_TELEFONECONTATO CASCADE;
DROP TABLE IF EXISTS T_TEMPO CASCADE;
DROP TABLE IF EXISTS T_TIPOCAPTURADA CASCADE;
DROP TABLE IF EXISTS T_TIPODEPENDENTE CASCADE;
DROP TABLE IF EXISTS T_TIPOEMBARCACAO CASCADE;
DROP TABLE IF EXISTS T_TIPOTEL CASCADE;
DROP TABLE IF EXISTS T_UF CASCADE;
DROP TABLE IF EXISTS T_USUARIO CASCADE;
DROP TABLE IF EXISTS T_USUARIO_HAS_T_TELEFONECONTATO CASCADE;
DROP TABLE IF EXISTS T_VENTO CASCADE;
DROP TABLE IF EXISTS T_PESCADOR_HAS_T_AREAPESCA CASCADE;
DROP TABLE IF EXISTS T_TIPORENDA CASCADE;
DROP TABLE IF EXISTS T_PESCADOR_HAS_T_TIPODEPENDENTE CASCADE;
DROP TABLE IF EXISTS T_ESP_ARTE_PESCA CASCADE;
DROP TABLE IF EXISTS T_ARRASTOFUNDO CASCADE;
DROP TABLE IF EXISTS T_PESQUEIRO_AF CASCADE;
DROP TABLE IF EXISTS T_REDE CASCADE;
DROP TABLE IF EXISTS T_PESCALINHA CASCADE;
DROP TABLE IF EXISTS T_MARISCAGEM CASCADE;
DROP TABLE IF EXISTS T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS T_PESCADOR_HAS_TELEFONE CASCADE;

DROP TABLE IF EXISTS  T_TIPOMARE CASCADE;
DROP TABLE IF EXISTS  T_BARCO CASCADE;
DROP TABLE IF EXISTS  T_CALAO_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_ARRASTOFUNDO_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_ARRASTOFUNDO_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_TARRAFA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_EMALHE CASCADE;
DROP TABLE IF EXISTS  T_CALAO_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_EMALHE_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_CALAO CASCADE;
DROP TABLE IF EXISTS  T_TARRAFA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_EMALHE_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_TARRAFA CASCADE;
DROP TABLE IF EXISTS  T_MERGULHO_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_GROSSEIRA CASCADE;
DROP TABLE IF EXISTS  T_GROSSEIRA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_LINHA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_LINHA CASCADE;
DROP TABLE IF EXISTS  T_LINHA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_MERGULHO_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_MERGULHO CASCADE;
DROP TABLE IF EXISTS  T_GROSSEIRA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_COLETAMANUAL CASCADE;
DROP TABLE IF EXISTS  T_COLETAMANUAL_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_COLETAMANUAL_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_VARAPESCA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_VARAPESCA CASCADE;
DROP TABLE IF EXISTS  T_VARAPESCA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_LINHAFUNDO CASCADE;
DROP TABLE IF EXISTS  T_LINHAFUNDO_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_LINHAFUNDO_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_JERERE CASCADE;
DROP TABLE IF EXISTS  T_JERERE_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_RATOEIRA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_SIRIPOIA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_JERERE_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_MANZUA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_MANZUA CASCADE;
DROP TABLE IF EXISTS  T_RATOEIRA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_MANZUA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE IF EXISTS  T_SIRIPOIA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE IF EXISTS  T_SIRIPOIA CASCADE;
DROP TABLE IF EXISTS  T_RATOEIRA CASCADE;
DROP TABLE IF EXISTS  T_PESCADOR_HAS_T_ARTEPESCA CASCADE;
DROP TABLE IF EXISTS  T_PESCADOR_HAS_T_TIPOCAPTURADA CASCADE;


Drop view if exists  v_arrasto_has_t_pesqueiro;
Drop view if exists  v_varapesca_has_t_pesqueiro;
Drop view if exists  v_tarrafa_has_t_pesqueiro;
Drop view if exists  v_siripoia_has_t_pesqueiro;
Drop view if exists  v_ratoeira_has_t_pesqueiro;
Drop view if exists  v_mergulho_has_t_pesqueiro;
Drop view if exists  v_manzua_has_t_pesqueiro;
Drop view if exists  v_linhafundo_has_t_pesqueiro;
Drop view if exists  v_linha_has_t_pesqueiro;
Drop view if exists  v_jerere_has_t_pesqueiro;
Drop view if exists  v_grosseira_has_t_pesqueiro;
Drop view if exists  v_coletamanual_has_t_pesqueiro;
Drop view if exists  v_emalhe_has_t_pesqueiro;
Drop view if exists  v_calao_has_t_pesqueiro;

Drop table if exists  t_calao_has_t_pesqueiro;
Drop table if exists  t_emalhe_has_t_pesqueiro;
Drop table if exists  t_coletamanual_has_t_pesqueiro;
Drop table if exists  t_grosseira_has_t_pesqueiro;
Drop table if exists  t_jerere_has_t_pesqueiro;
Drop table if exists  t_linha_has_t_pesqueiro;
Drop table if exists  t_linhafundo_has_t_pesqueiro;
Drop table if exists  t_manzua_has_t_pesqueiro;
Drop table if exists  t_mergulho_has_t_pesqueiro;
Drop table if exists  t_ratoeira_has_t_pesqueiro;
Drop table if exists  t_siripoia_has_t_pesqueiro;
Drop table if exists  t_tarrafa_has_t_pesqueiro;
Drop table if exists  t_varapesca_has_t_pesqueiro;
Drop table if exists  t_arrastofundo_has_t_pesqueiro;

Drop view if exists  v_arrastofundo_has_t_especie_capturada;
Drop view if exists  v_varapesca_has_t_especie_capturada;
Drop view if exists  v_tarrafa_has_t_especie_capturada;
Drop view if exists  v_siripoia_has_t_especie_capturada;
Drop view if exists  v_ratoeira_has_t_especie_capturada;
Drop view if exists  v_mergulho_has_t_especie_capturada;
Drop view if exists  v_manzua_has_t_especie_capturada;
Drop view if exists  v_linhafundo_has_t_especie_capturada;
Drop view if exists  v_linha_has_t_especie_capturada;
Drop view if exists  v_jerere_has_t_especie_capturada;
Drop view if exists  v_grosseira_has_t_especie_capturada;
Drop view if exists  v_coletamanual_has_t_especie_capturada;
Drop view if exists  v_emalhe_has_t_especie_capturada;
Drop view if exists  v_calao_has_t_especie_capturada;

Drop table if exists  t_calao_has_t_especie_capturada;
Drop table if exists  t_emalhe_has_t_especie_capturada;
Drop table if exists  t_coletamanual_has_t_especie_capturada;
Drop table if exists  t_grosseira_has_t_especie_capturada;
Drop table if exists  t_jerere_has_t_especie_capturada;
Drop table if exists  t_linha_has_t_especie_capturada;
Drop table if exists  t_linhafundo_has_t_especie_capturada;
Drop table if exists  t_manzua_has_t_especie_capturada;
Drop table if exists  t_mergulho_has_t_especie_capturada;
Drop table if exists  t_ratoeira_has_t_especie_capturada;
Drop table if exists  t_siripoia_has_t_especie_capturada;
Drop table if exists  t_tarrafa_has_t_especie_capturada;
Drop table if exists  t_varapesca_has_t_especie_capturada;
Drop table if exists  t_arrastofundo_has_t_especie_capturada;

Drop table if exists t_arrastofundo;
Drop table if exists t_varapesca;
Drop table if exists t_tarrafa;
Drop table if exists t_siripoia;
Drop table if exists t_ratoeira;
Drop table if exists t_mergulho;
Drop table if exists t_manzua;
Drop table if exists t_linhafundo;
Drop table if exists t_linha;
Drop table if exists t_jerere;
Drop table if exists t_grosseira;
Drop table if exists t_coletamanual;
Drop table if exists t_emalhe;
Drop table if exists t_calao;



-- -----------------------------------------------------
-- TABLE T_UF
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_UF (
 TUF_SIGLA VARCHAR(2) NOT NULL,
 TUF_NOME VARCHAR(25) NOT NULL,
 PRIMARY KEY (TUF_SIGLA)
 );

-- -----------------------------------------------------
-- TABLE T_MUNICIPIO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_MUNICIPIO (
 TMUN_ID SERIAL,
 TMUN_MUNICIPIO VARCHAR(50) NOT NULL,
 TUF_SIGLA VARCHAR(2) NOT NULL,
 PRIMARY KEY (TMUN_ID),
 CONSTRAINT FK_T_MUNICIPIO_T_UF FOREIGN KEY (TUF_SIGLA) REFERENCES T_UF (TUF_SIGLA)
);

-- -----------------------------------------------------
-- TABLE T_ENDERECO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ENDERECO (
 TE_ID SERIAL,
 TE_LOGRADOURO VARCHAR(100) NULL,
 TE_NUMERO VARCHAR(45) NULL,
 TE_BAIRRO VARCHAR(50) NULL,
 TE_CEP DECIMAL(8) NULL,
 TE_COMP VARCHAR(50) NULL,
 TMUN_ID INT NULL,
 PRIMARY KEY (TE_ID),
 CONSTRAINT FK_T_ENDERECO_T_MUNICIPIO1 FOREIGN KEY (TMUN_ID) REFERENCES T_MUNICIPIO (TMUN_ID)
);

-- -----------------------------------------------------
-- TABLE T_ESCOLARIDADE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ESCOLARIDADE (
 ESC_ID SERIAL,
 ESC_NIVEL VARCHAR(25) NULL,
 PRIMARY KEY (ESC_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR (
 TP_ID SERIAL,
 TP_NOME VARCHAR(60) NOT NULL,
 TP_SEXO VARCHAR(1) NULL,
 TP_MATRICULA VARCHAR(45) NULL,
 TP_APELIDO VARCHAR(45) NULL,
 TP_FILIACAOPAI VARCHAR(60) NULL,
 TP_FILIACAOMAE VARCHAR(60) NULL,
 TP_CTPS VARCHAR(45) NULL,
 TP_PIS VARCHAR(45) NULL,
 TP_INSS VARCHAR(45) NULL,
 TP_NIT_CEI VARCHAR(45) NULL,
 TP_RG VARCHAR(45) NULL,
 TP_CMA VARCHAR(45) NULL,
 TP_RGB_MAA_IBAMA VARCHAR(45) NULL,
 TP_CIR_CAP_PORTO VARCHAR(45) NULL,
 TP_CPF VARCHAR(14) NULL,
 TP_DATANASC DATE NULL,
 TMUN_ID_NATURAL INT NULL,
 TE_ID INT NULL,
 TP_ESPECIFICIDADE VARCHAR(255) NULL,
 ESC_ID INT NULL,
 TP_RESP_LAN int null, 
 TP_RESP_CAD int null,
 TP_DTA_CAD date,
 TP_OBS VARCHAR(255) NULL,
 PRIMARY KEY (TP_ID),
 CONSTRAINT FK_T_PESCADOR_T_MUNICIPIO1 FOREIGN KEY (TMUN_ID_NATURAL) REFERENCES T_MUNICIPIO (TMUN_ID),
 CONSTRAINT FK_T_PESCADOR_T_ENDERECO1 FOREIGN KEY (TE_ID) REFERENCES T_ENDERECO (TE_ID), 
 CONSTRAINT FK_PESCADOR_ESC_ID FOREIGN KEY (ESC_ID) REFERENCES T_ESCOLARIDADE(ESC_ID)
);

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_ESCOLARIDADE
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_ESCOLARIDADE (
--  ESC_ID INT NOT NULL,
--  TP_ID INT NOT NULL,
--  PRIMARY KEY (ESC_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ESCOLARIDADE_T_PESCADOR1
--  FOREIGN KEY (TP_ID)
--  REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ESCOLARIDADE_T_ESCOLARIDADE1 FOREIGN KEY (ESC_ID) REFERENCES T_ESCOLARIDADE (ESC_ID)
--  );

-- -----------------------------------------------------
-- TABLE T_RENDA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_RENDA (
 REN_ID SERIAL,
 REN_RENDA VARCHAR(40) NULL,
 REN_FATOR NUMERIC(4,2) NULL,
 REN_FATORMIN NUMERIC(4,2) NULL,
 REN_FATORMAX NUMERIC(4,2) NULL,
 PRIMARY KEY (REN_ID)
);

-- -----------------------------------------------------
-- TABLE T_PROGRAMASOCIAL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PROGRAMASOCIAL (
 PRS_ID SERIAL NOT NULL,
 PRS_PROGRAMA VARCHAR(30) NULL,
 PRIMARY KEY (PRS_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_PROGRAMASOCIAL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_PROGRAMASOCIAL (
 TP_ID INT NOT NULL,
 PRS_ID INT NOT NULL,
 PRIMARY KEY (TP_ID, PRS_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_PROGRAMASOCIAL_T_PESCADOR1
 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_PROGRAMASOCIAL_T_PROGRAMASOCIAL1 
FOREIGN KEY (PRS_ID) REFERENCES T_PROGRAMASOCIAL (PRS_ID)
);

-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASPROGRAMASOCIAL AS
SELECT
PS.TP_ID, PS.PRS_ID, TBS.PRS_PROGRAMA
FROM
T_PESCADOR_HAS_T_PROGRAMASOCIAL AS PS,
T_PROGRAMASOCIAL AS TBS
WHERE
PS.PRS_ID = TBS.PRS_ID;

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_ENDERECO
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_ENDERECO (
--  TP_ID INT NOT NULL,
--  TE_ID INT NOT NULL,
--  PRIMARY KEY (TE_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ENDERECO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ENDERECO_T_ENDERECO1 FOREIGN KEY (TE_ID) REFERENCES T_ENDERECO (TE_ID)
-- );

-- -----------------------------------------------------
-- TABLE T_COMUNIDADE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_COMUNIDADE (
 TCOM_ID SERIAL,
 TCOM_NOME VARCHAR(50) NOT NULL,
 PRIMARY KEY (TCOM_ID),
 UNIQUE (TCOM_NOME)
);

-- -----------------------------------------------------
-- TABLE T_COLONIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_COLONIA (
 TC_ID SERIAL,
 TC_NOME VARCHAR(50) NOT NULL,
 TC_ESPECIFICIDADE CHARACTER VARYING(50),
 TCOM_ID INTEGER NULL,
 TE_ID INTEGER NULL,
 PRIMARY KEY (TC_ID),
 UNIQUE (TC_NOME)
);

-- -----------------------------------------------------
-- TABLE T_ARTEPESCA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ARTEPESCA (
 TAP_ID SERIAL,
 TAP_ARTEPESCA VARCHAR(50) NOT NULL,
 PRIMARY KEY (TAP_ID),
 UNIQUE (TAP_ARTEPESCA)
);

-- -----------------------------------------------------
-- TABLE T_TIPOEMBARCACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPOEMBARCACAO (
 TTE_ID SERIAL,
 TTE_TIPOEMBARCACAO VARCHAR(50) NOT NULL,
 PRIMARY KEY (TTE_ID),
 UNIQUE (TTE_TIPOEMBARCACAO)
);

-- -----------------------------------------------------
-- TABLE T_TIPODEPENDENTE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPODEPENDENTE (
 TTD_ID SERIAL,
 TTD_TIPODEPENDENTE VARCHAR(30) NOT NULL,
 PRIMARY KEY (TTD_ID)
);

-- -----------------------------------------------------
-- TABLE T_AREAPESCA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_AREAPESCA (
 TAREAP_ID SERIAL,
 TAREAP_AREAPESCA VARCHAR(50) NOT NULL,
 PRIMARY KEY (TAREAP_ID),
 UNIQUE (TAREAP_AREAPESCA)
);

-- -----------------------------------------------------
-- TABLE T_SITUACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_SITUACAO (
 TS_ID SERIAL,
 TS_SITUACAO BOOLEAN DEFAULT TRUE NULL,
 TS_MOTIVO VARCHAR(100) NULL,
 PRIMARY KEY (TS_ID)
);

-- -----------------------------------------------------
-- TABLE T_TIPOTEL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPOTEL (
 TTEL_ID SERIAL,
 TTEL_DESC VARCHAR(50) NOT NULL,
 PRIMARY KEY (TTEL_ID)
);

-- -----------------------------------------------------
-- TABLE T_TELEFONECONTATO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TELEFONECONTATO (
 TTCONT_ID SERIAL,
 TTCONT_DDD DECIMAL(2) NOT NULL,
 TTCONT_TELEFONE DECIMAL(10) NOT NULL,
 TTEL_ID INT NOT NULL,
 PRIMARY KEY (TTCONT_ID),
 CONSTRAINT FK_T_TELEFONECONTATO_T_TIPOTEL1 FOREIGN KEY (TTEL_ID) REFERENCES T_TIPOTEL (TTEL_ID)
);

-- -----------------------------------------------------
-- TABLE T_LOGIN
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_LOGIN (
 TL_ID SERIAL,
 TL_LOGIN VARCHAR(12) NOT NULL,
 TL_HASHSENHA CHAR(40) NOT NULL,
 TL_ULTIMOACESSO TIMESTAMP NULL,
 PRIMARY KEY (TL_ID),
 UNIQUE (TL_LOGIN)
);

-- -----------------------------------------------------
-- TABLE T_PERFIL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PERFIL (
 TP_ID SERIAL,
 TP_PERFIL VARCHAR(40) NOT NULL,
 PRIMARY KEY (TP_ID)
);

-- -----------------------------------------------------
-- TABLE T_USUARIO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_USUARIO (
 TU_ID SERIAL,
 TU_NOME VARCHAR(45) NOT NULL,
 TU_SEXO VARCHAR(1) NOT NULL,
 TU_CPF VARCHAR(14) NOT NULL,
 TU_RG VARCHAR(11) NOT NULL,
 TU_EMAIL VARCHAR(30) NOT NULL,
 TU_TELRES VARCHAR (20),
 TU_TELCEL VARCHAR (20),
 TU_USUARIODELETADO BOOLEAN DEFAULT FALSE NOT NULL,
 TL_ID INT NOT NULL,
 TP_ID INT NOT NULL,
 TE_ID INT NOT NULL,
 PRIMARY KEY (TU_ID),
 CONSTRAINT FK_T_USUARIO_T_LOGIN1 FOREIGN KEY (TL_ID) REFERENCES T_LOGIN (TL_ID),
 CONSTRAINT FK_T_USUARIO_T_PERFIL1 FOREIGN KEY (TP_ID) REFERENCES T_PERFIL (TP_ID),
 CONSTRAINT FK_T_USUARIO_T_ENDERECO1 FOREIGN KEY (TE_ID) REFERENCES T_ENDERECO (TE_ID)
 );

-- -----------------------------------------------------
-- TABLE T_HISTORICORECADASTRAMENTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_HISTORICORECADASTRAMENTO (
 THR_DATA DATE NOT NULL,
 TP_ID INT NULL,
 TS_ID INT NULL,
 THR_DESCRICAO VARCHAR(45) NULL,
 TU_ID_RESP_COLETA INT NULL,
 TU_ID_RESP_DIGITA INT NULL,
 PRIMARY KEY (THR_DATA, TP_ID, TS_ID),
 CONSTRAINT FK_T_DATARECADASTRAMENTO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_HISTOORECADASTRAMENTO_T_SITUACAOATUAL1 FOREIGN KEY (TS_ID) REFERENCES T_SITUACAO (TS_ID),
 CONSTRAINT FK_T_HISTOORECADASTRAMENTO_T_USUARIO1 FOREIGN KEY (TU_ID_RESP_COLETA) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_T_HISTOORECADASTRAMENTO_T_USUARIO2 FOREIGN KEY (TU_ID_RESP_DIGITA) REFERENCES T_USUARIO (TU_ID)
);

-- -----------------------------------------------------
-- TABLE T_TIPOCAPTURADA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPOCAPTURADA (
 ITC_ID SERIAL,
 ITC_TIPO VARCHAR(30) NULL,
 PRIMARY KEY (ITC_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_TIPOCAPTURADA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_TIPOCAPTURADA (
 TP_ID INT NOT NULL,
 ITC_ID INT NOT NULL,
 PRIMARY KEY (TP_ID, ITC_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOCAPTURADA FOREIGN KEY (ITC_ID) REFERENCES T_TIPOCAPTURADA (ITC_ID)
);

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_TIPOARTEPESCA
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_TIPOARTEPESCA (
--  TP_ID INT NOT NULL,
--  TAP_ID INT NOT NULL,
--  ITC_ID INT NULL,
--  PRIMARY KEY (TP_ID, TAP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_TIPOARTEPESCA1 FOREIGN KEY (TAP_ID) REFERENCES T_ARTEPESCA (TAP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOCAPTURADA FOREIGN KEY (ITC_ID) REFERENCES T_TIPOCAPTURADA (ITC_ID)
-- );

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_ESPECIECAPTURADAS
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_ESPECIECAPTURADAS (
--  TP_ID INT NOT NULL,
--  T_TIPOCAPTURADA_ITC_ID INT NOT NULL,
--  PRIMARY KEY (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ESPECIECAPTURADAS_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ESPECIECAPTURADAS_T_TIPOCAPTURADA1 FOREIGN KEY (T_TIPOCAPTURADA_ITC_ID) REFERENCES T_TIPOCAPTURADA (ITC_ID)
-- );

-- -----------------------------------------------------
-- TABLE T_PORTEEMBARCACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PORTEEMBARCACAO (
 TPE_ID SERIAL,
 TPE_PORTE VARCHAR(30) NOT NULL,
 PRIMARY KEY (TPE_ID)
);

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_EMBARCACAO
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_EMBARCACAO (
--  TTE_ID INT NOT NULL,
--  TP_ID INT NOT NULL,
--  TPTE_MOTOR BOOLEAN NOT NULL,
--  TPE_ID INT NOT NULL,
--  PRIMARY KEY (TTE_ID, TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_EMBARCACAO1 FOREIGN KEY (TTE_ID) REFERENCES T_TIPOEMBARCACAO (TTE_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_PORTEEMBARCACAO1 FOREIGN KEY (TPE_ID) REFERENCES T_PORTEEMBARCACAO (TPE_ID)
-- );

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_EMBARCACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_EMBARCACAO (
 TTE_ID INT NOT NULL,
 TP_ID INT NOT NULL,
 TPTE_MOTOR BOOLEAN NULL,
 TPE_ID INT NULL,
TPTE_DONO INT NULL,
 PRIMARY KEY (TTE_ID, TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_EMBARCACAO1 FOREIGN KEY (TTE_ID) REFERENCES T_TIPOEMBARCACAO (TTE_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_PORTEEMBARCACAO1 FOREIGN KEY (TPE_ID) REFERENCES T_PORTEEMBARCACAO (TPE_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_COLONIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_COLONIA (
 TP_ID INT NOT NULL,
 TC_ID INT NOT NULL,
 TPTC_DATAINSCCOLONIA DATE NULL,
 PRIMARY KEY (TP_ID, TC_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COLONIA_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COLONIA_T_COLONIA1 FOREIGN KEY (TC_ID) REFERENCES T_COLONIA (TC_ID)
);

-- -----------------------------------------------------
-- TABLE T_ALTERACAOSENHA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ALTERACAOSENHA (
 TAS_TOKEN CHAR(40) NOT NULL,
 TAS_DATASOLICITACAO TIMESTAMP NOT NULL,
 TAS_DATAALTERACAO TIMESTAMP NULL,
 TU_ID INT NOT NULL,
 PRIMARY KEY (TAS_TOKEN),
 CONSTRAINT FK_T_ALTERACAOSENHA_T_USUARIO1 FOREIGN KEY (TU_ID) REFERENCES T_USUARIO (TU_ID)
);

-- -----------------------------------------------------
-- TABLE T_USUARIO_HAS_T_TELEFONECONTATO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_USUARIO_HAS_T_TELEFONECONTATO (
 TU_ID INT NOT NULL,
 TTCONT_ID INT NOT NULL,
 PRIMARY KEY (TU_ID, TTCONT_ID),
 CONSTRAINT FK_T_USUARIO_HAS_T_TELEFONECONTATO_T_USUARIO1 FOREIGN KEY (TU_ID) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_T_USUARIO_HAS_T_TELEFONECONTATO_T_TELEFONECONTATO1 FOREIGN KEY (TTCONT_ID) REFERENCES T_TELEFONECONTATO (TTCONT_ID)
);

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_TELEFONECONTATO
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_TELEFONECONTATO (
--  TP_ID INT NOT NULL,
--  TTCONT_ID INT NOT NULL,
--  PRIMARY KEY (TP_ID, TTCONT_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_TELEFONECONTATO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_TELEFONECONTATO_T_TELEFONECONTATO1 FOREIGN KEY (TTCONT_ID) REFERENCES T_TELEFONECONTATO (TTCONT_ID)
-- );

-- -----------------------------------------------------
-- TABLE T_GRUPO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_GRUPO (
 GRP_ID SERIAL,
 GRP_NOME VARCHAR(45) NULL,
 PRIMARY KEY (GRP_ID)
);

-- -----------------------------------------------------
-- TABLE T_ORDEM
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ORDEM (
 ORD_ID SERIAL,
 ORD_NOME VARCHAR(30) NULL,
 ORD_CARACTERISTICA VARCHAR(45) NULL,
 GRP_ID INT NOT NULL,
 PRIMARY KEY (ORD_ID),
 CONSTRAINT FK_DSBQ_ORDEM_DSBQ_GRUPO FOREIGN KEY (GRP_ID) REFERENCES T_GRUPO (GRP_ID)
);

-- -----------------------------------------------------
-- TABLE T_FAMILIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_FAMILIA (
 FAM_ID SERIAL,
 FAM_NOME VARCHAR(45) NULL,
 FAM_ORDEM_FILOGENETICA INT NULL,
 FAM_TIPO VARCHAR(45) NULL,
 FAM_CARACTERISTICA VARCHAR(255) NULL,
 ORD_ID INT NOT NULL,
 PRIMARY KEY (FAM_ID),
 CONSTRAINT FK_DSBQ_FAMILIA_DSBQ_ORDEM1 FOREIGN KEY (ORD_ID) REFERENCES T_ORDEM (ORD_ID)
);

-- -----------------------------------------------------
-- TABLE T_GENERO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_GENERO (
 GEN_ID SERIAL,
 GEN_NOME VARCHAR(45) NULL,
 FAM_ID INT NOT NULL,
 PRIMARY KEY (GEN_ID),
 CONSTRAINT FK_DSBQ_GENERO_DSBQ_FAMILIA1 FOREIGN KEY (FAM_ID) REFERENCES T_FAMILIA (FAM_ID)
);

-- -----------------------------------------------------
-- TABLE T_ESPECIE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ESPECIE (
 ESP_ID SERIAL,
 ESP_NOME VARCHAR(45) NULL,
 ESP_DESCRITOR VARCHAR(45) NULL,
 ESP_NOME_COMUM VARCHAR(45) NULL,
 GEN_ID INT NOT NULL,
 PRIMARY KEY (ESP_ID),
 CONSTRAINT FK_DSBQ_ESPÉCIE_DSBQ_GENERO1 FOREIGN KEY (GEN_ID) REFERENCES T_GENERO (GEN_ID)
);

-- -----------------------------------------------------
-- TABLE T_SUBAMOSTRA
-- -----------------------------------------------------
CREATE TABLE t_subamostra
(
  sa_id serial NOT NULL,
  sa_pescador text,
  sa_datachegada date,
  CONSTRAINT t_subamostra_pkey PRIMARY KEY (sa_id)
)
-- -----------------------------------------------------
-- TABLE T_PORTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PORTO (
 PTO_ID SERIAL,
 PTO_NOME VARCHAR(45) NULL,
 PTO_LOCAL VARCHAR(45) NULL,
 TMUN_ID INT NOT NULL,
 PRIMARY KEY (PTO_ID),
 CONSTRAINT FK_DSBQ_PORTO_T_MUNICIPIO1 FOREIGN KEY (TMUN_ID) REFERENCES T_MUNICIPIO (TMUN_ID)
);


-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_PORTO (
 TP_ID INT NOT NULL,
 PTO_ID INT NOT NULL,
 PRIMARY KEY (TP_ID,  PTO_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_PORTO_TP_ID FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_PORTO_PTO_ID FOREIGN KEY (PTO_ID) REFERENCES T_PORTO (PTO_ID)
);

-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASPORTO AS
 SELECT PP.TP_ID, PP.PTO_ID, PTO.PTO_NOME, PTO.PTO_LOCAL
 FROM T_PESCADOR_HAS_T_PORTO AS PP, T_PORTO AS PTO
 WHERE PP.PTO_ID=PTO.PTO_ID;

-- -----------------------------------------------------
-- TABLE T_TEMPO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TEMPO (
 TMP_ID SERIAL,
 TMP_ESTADO VARCHAR(45) NULL,
 PRIMARY KEY (TMP_ID)
);

-- -----------------------------------------------------
-- TABLE T_VENTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_VENTO (
 VNT_ID SERIAL,
 VNT_FORCA VARCHAR(20) NULL,
 PRIMARY KEY (VNT_ID)
);

-- -----------------------------------------------------
-- TABLE T_FICHA_DIARIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_FICHA_DIARIA (
 FD_ID SERIAL,
 T_ESTAGIARIO_TU_ID INT NOT NULL,
 T_MONITOR_TU_ID1 INT NOT NULL,
 FD_DATA DATE NOT NULL,
 FD_TURNO VARCHAR NOT NULL,
 OBS VARCHAR(255    ) NULL,
 PTO_ID INT NOT NULL,
 TMP_ID INT NOT NULL,
 VNT_ID INT NOT NULL,
 PRIMARY KEY (FD_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_DSBQ_PORTO1 FOREIGN KEY (PTO_ID) REFERENCES T_PORTO (PTO_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_T_USUARIO1 FOREIGN KEY (T_ESTAGIARIO_TU_ID) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_T_USUARIO2 FOREIGN KEY (T_MONITOR_TU_ID1) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_DSBQ_TEMPO1 FOREIGN KEY (TMP_ID) REFERENCES T_TEMPO (TMP_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_DSBQ_VENTO1 FOREIGN KEY (VNT_ID)REFERENCES T_VENTO (VNT_ID)
);

CREATE VIEW V_FICHA_DIARIA AS
SELECT FD.FD_ID, FD.FD_DATA, UPPER(SUBSTRING(FD.FD_TURNO, 1, 1)) AS FD_TURNO,
FD.PTO_ID, TP.PTO_NOME,
FD.TMP_ID, TEMPO.TMP_ESTADO,
FD.VNT_ID, VENTO.VNT_FORCA,
FD.T_ESTAGIARIO_TU_ID, TUE.TU_NOME AS T_ESTAGIARIO, 
FD.T_MONITOR_TU_ID1, TUM.TU_NOME AS T_MONITOR
FROM T_FICHA_DIARIA AS FD,
T_PORTO AS TP,
T_TEMPO AS TEMPO,
T_VENTO AS VENTO,
T_USUARIO AS TUE,
T_USUARIO AS TUM
WHERE FD.PTO_ID=TP.PTO_ID AND
FD.TMP_ID=TEMPO.TMP_ID AND
FD.VNT_ID=VENTO.VNT_ID AND
FD.T_ESTAGIARIO_TU_ID=TUE.TU_ID AND
FD.T_MONITOR_TU_ID1=TUM.TU_ID
ORDER BY FD.FD_DATA DESC , TP.PTO_NOME ASC;


-- -----------------------------------------------------
-- TABLE T_MONITORAMENTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_MONITORAMENTO (
 MNT_ID SERIAL,
 MNT_ARTE INT NULL,
 MNT_QUANTIDADE INT NULL,
 MNT_MONITORADO BOOLEAN NULL,
 FD_ID INT NOT NULL,
 PRIMARY KEY (MNT_ID),
 CONSTRAINT FK_DSBQ_MONITORAMENTO_DSBQ_FICHA_DIARIA1 FOREIGN KEY (FD_ID) REFERENCES T_FICHA_DIARIA (FD_ID)
);



-- -----------------------------------------------------
-- TABLE T_PESQUEIRO_AF
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESQUEIRO_AF (
 PAF_ID SERIAL,
 PAF_PESQUEIRO VARCHAR(45) NULL,
 PRIMARY KEY (PAF_ID)
);


-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_TT_DEPENDENTE
-- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_TT_DEPENDENTE (
--  TPTD_ID SERIAL,
--  TP_ID INT NOT NULL,
--  T_TIPODEPENDENTE_TTD_ID INT NOT NULL,
--  TP_TD_QUANTIDADE INTEGER,
--  PRIMARY KEY (TPTD_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_TT_DEPENDENTE_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_TT_DEPENDENTE_T_TIPODEPENDENTE1 FOREIGN KEY (T_TIPODEPENDENTE_TTD_ID) REFERENCES T_TIPODEPENDENTE (TTD_ID)
-- );

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_COMUNIDADE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_COMUNIDADE (
 TP_ID INT NOT NULL,
 TCOM_ID INT NOT NULL,
 PRIMARY KEY (TP_ID,  TCOM_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COMUNIDADE_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COMUNIDADE_T_COMUNIDADE1 FOREIGN KEY (TCOM_ID) REFERENCES T_COMUNIDADE (TCOM_ID)
);

-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASCOMUNIDADE AS
 SELECT PC.TP_ID, PC.TCOM_ID, COM.TCOM_NOME
 FROM T_PESCADOR_HAS_T_COMUNIDADE AS PC, T_COMUNIDADE AS COM
 WHERE PC.TCOM_ID=COM.TCOM_ID;


-- -----------------------------------------------------
-- VIEW USUARIO
-- -----------------------------------------------------
CREATE VIEW V_USUARIO AS
 SELECT T_USUARIO.TU_ID,
 T_USUARIO.TU_NOME, T_USUARIO.TU_SEXO,
 T_USUARIO.TU_CPF, T_USUARIO.TU_RG,
 T_USUARIO.TU_EMAIL, T_USUARIO.TU_USUARIODELETADO,
 T_USUARIO.TU_TELRES, T_USUARIO.TU_TELCEL,
 T_USUARIO.TL_ID,
 T_USUARIO.TP_ID, T_PERFIL.TP_PERFIL,
 T_USUARIO.TE_ID,
 T_LOGIN.TL_LOGIN,
 T_ENDERECO.TE_LOGRADOURO, T_ENDERECO.TE_NUMERO, T_ENDERECO.TE_COMP, T_ENDERECO.TE_BAIRRO, T_ENDERECO.TE_CEP,
 T_ENDERECO.TMUN_ID, T_MUNICIPIO.TMUN_MUNICIPIO, T_MUNICIPIO.TUF_SIGLA
 FROM T_USUARIO, T_LOGIN, T_ENDERECO, T_MUNICIPIO, T_PERFIL
 WHERE T_USUARIO.TL_ID = T_LOGIN.TL_ID AND
 T_USUARIO.TE_ID = T_ENDERECO.TE_ID AND
 T_ENDERECO.TMUN_ID = T_MUNICIPIO.TMUN_ID AND
 T_USUARIO.TP_ID = T_PERFIL.TP_ID;

-- -----------------------------------------------------
-- VIEW COLONIA
-- -----------------------------------------------------
CREATE VIEW V_COLONIA AS
 SELECT T_COLONIA.TC_ID, T_COLONIA.TC_NOME, T_COLONIA.TC_ESPECIFICIDADE, T_COLONIA.TCOM_ID,
 T_COLONIA.TE_ID, T_ENDERECO.TE_LOGRADOURO, T_ENDERECO.TE_NUMERO, T_ENDERECO.TE_COMP, T_ENDERECO.TE_BAIRRO, T_ENDERECO.TE_CEP,
 T_ENDERECO.TMUN_ID, T_MUNICIPIO.TMUN_MUNICIPIO, T_MUNICIPIO.TUF_SIGLA
 FROM T_COLONIA, T_ENDERECO, T_MUNICIPIO
 WHERE T_COLONIA.TE_ID = T_ENDERECO.TE_ID AND
 T_ENDERECO.TMUN_ID = T_MUNICIPIO.TMUN_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADOR AS
SELECT
TP.TP_ID, TP.TP_NOME,
TP.TP_SEXO, TP.TP_MATRICULA,
TP.TP_APELIDO, TP.TP_FILIACAOPAI,
TP.TP_FILIACAOMAE, TP.TP_CTPS,
TP.TP_PIS, TP.TP_INSS,
TP.TP_NIT_CEI, TP.TP_RG,
TP.TP_CMA, TP.TP_RGB_MAA_IBAMA,
TP.TP_CIR_CAP_PORTO, TP.TP_CPF,
TP.TP_DATANASC,
TP.TP_ESPECIFICIDADE, TP.ESC_ID,
TP.TMUN_ID_NATURAL, TM.TMUN_MUNICIPIO "MUNNAT", TM.TUF_SIGLA "SIGNAT",
TP.TE_ID, TE.TE_LOGRADOURO, TE.TE_NUMERO,
TE.TE_COMP, TE.TE_BAIRRO, TE.TE_CEP,
TE.TMUN_ID, TM.TMUN_MUNICIPIO, TM.TUF_SIGLA, TP_RESP_LAN, TP_RESP_CAD, TP_OBS
FROM
T_PESCADOR AS TP, T_ENDERECO AS TE, T_MUNICIPIO AS TM
WHERE
TP.TMUN_ID_NATURAL = TM.TMUN_ID AND
TP.TE_ID = TE.TE_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE TABLE T_PESCADOR_HAS_TELEFONE
(
 TPT_TP_ID INTEGER NOT NULL,
 TPT_TTEL_ID INTEGER NOT NULL,
 TPT_TELEFONE VARCHAR(20) NOT NULL,
 CONSTRAINT T_PESCADORCONTATO_PKEY PRIMARY KEY (TPT_TP_ID, TPT_TTEL_ID),
 CONSTRAINT FK_TPT_TP FOREIGN KEY (TPT_TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_TPT_TTEL FOREIGN KEY (TPT_TTEL_ID) REFERENCES T_TIPOTEL (TTEL_ID)
);

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASTELEFONE AS
SELECT PT.TPT_TP_ID, PT.TPT_TTEL_ID, PT.TPT_TELEFONE, TT.TTEL_DESC
FROM T_PESCADOR_HAS_TELEFONE AS PT, T_TIPOTEL AS TT
WHERE PT.TPT_TTEL_ID = TT.TTEL_ID;

CREATE TABLE T_PESCADOR_HAS_T_TIPODEPENDENTE
(
 TP_ID INTEGER NOT NULL,
 TTD_ID INTEGER NOT NULL,
 TPTD_QUANTIDADE INTEGER,
 CONSTRAINT T_PESCADOR_HAS_T_TIPODEPENDENTE_PKEY PRIMARY KEY (TP_ID, TTD_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPODEPENDENTE_TP_ID FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPODEPENDENTE_TTD_ID FOREIGN KEY (TTD_ID) REFERENCES T_TIPODEPENDENTE (TTD_ID)
);

-- INSERT INTO T_PESCADOR_HAS_T_TIPODEPENDENTE (TP_ID, TTD_ID, TPTD_QUANTIDADE)
-- SELECT TP_ID, T_TIPODEPENDENTE_TTD_ID, TP_TD_QUANTIDADE FROM T_PESCADOR_HAS_TT_DEPENDENTE ;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASDEPENDENTE AS
SELECT
PD.TP_ID, PD.TTD_ID, PD.TPTD_QUANTIDADE,
TD.TTD_TIPODEPENDENTE
FROM
T_PESCADOR_HAS_T_TIPODEPENDENTE AS PD,
T_TIPODEPENDENTE AS TD
WHERE
PD.TTD_ID = TD.TTD_ID;


-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE TABLE T_TIPORENDA (
TTR_ID SERIAL,
TTR_DESCRICAO VARCHAR(45) NOT NULL,
CONSTRAINT T_TIPORENDA_TTR_ID_PKEY PRIMARY KEY (TTR_ID)
);

-- INSERT INTO T_TIPORENDA VALUES (1, 'PESCA');
-- INSERT INTO T_TIPORENDA VALUES (2, 'OUTRA RENDA');


-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
--DROP TABLE IF EXISTS T_PESCADOR_HAS_T_RENDA;
CREATE TABLE T_PESCADOR_HAS_T_RENDA
(
 TP_ID INTEGER NOT NULL,
 REN_ID INTEGER NOT NULL,
 TTR_ID INTEGER NOT NULL,
 CONSTRAINT T_PESCADOR_HAS_T_RENDA_PKEY PRIMARY KEY (TP_ID, REN_ID, TTR_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_RENDA_TP_ID FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_RENDA FOREIGN KEY (REN_ID) REFERENCES T_RENDA (REN_ID),
CONSTRAINT FK_T_PESCADOR_HAS_T_RENDA_TTR_ID FOREIGN KEY (TTR_ID) REFERENCES T_TIPORENDA (TTR_ID)
);

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASRENDA AS
SELECT
PHR.TP_ID,
PHR.REN_ID, TR.REN_RENDA,
PHR.TTR_ID, TTR.TTR_DESCRICAO
FROM
T_PESCADOR_HAS_T_RENDA AS PHR,
T_RENDA AS TR,
T_TIPORENDA AS TTR
WHERE
PHR.REN_ID = TR.REN_ID AND
PHR.TTR_ID = TTR.TTR_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASCOLONIA AS
SELECT
PHC.TP_ID,
PHC.TC_ID, TC.TC_NOME,
PHC.TPTC_DATAINSCCOLONIA
FROM
T_PESCADOR_HAS_T_COLONIA AS PHC,
T_COLONIA AS TC
WHERE
PHC.TC_ID = TC.TC_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
-- CREATE VIEW V_PESCADORHASEMBARCACAO AS
-- SELECT
-- PHE.TP_ID,
-- PHE.TTE_ID, TTE.TTE_TIPOEMBARCACAO,
-- PHE.TPTE_MOTOR,
-- PHE.TPE_ID, TPE.TPE_PORTE
-- FROM
-- T_PESCADOR_HAS_T_EMBARCACAO AS PHE,
-- T_TIPOEMBARCACAO AS TTE,
-- T_PORTEEMBARCACAO AS TPE
-- WHERE
-- PHE.TTE_ID = TTE.TTE_ID AND
-- PHE.TPE_ID = TPE.TPE_ID;


CREATE VIEW V_PESCADORHASEMBARCACAO AS
SELECT
PHE.TP_ID,
PHE.TTE_ID, TTE.TTE_TIPOEMBARCACAO,
PHE.TPTE_MOTOR,
PHE.TPE_ID, TPE.TPE_PORTE,
PHE.TPTE_DONO
FROM
T_PESCADOR_HAS_T_EMBARCACAO AS PHE,
T_TIPOEMBARCACAO AS TTE,
T_PORTEEMBARCACAO AS TPE
WHERE
PHE.TTE_ID = TTE.TTE_ID AND
PHE.TPE_ID = TPE.TPE_ID;

-- -- -----------------------------------------------------
-- -- VIEW Pescador
-- -- -----------------------------------------------------
-- CREATE VIEW V_PESCADORHASARTETIPOAREA AS
-- SELECT
-- PATA.TP_ID,
-- PATA.TAP_ID, ARTE.TAP_ARTEPESCA,
-- PATA.ITC_ID, TIPO.ITC_TIPO
-- FROM
-- T_PESCADOR_HAS_T_TIPOARTEPESCA AS PATA,
-- T_TIPOCAPTURADA AS TIPO,
-- T_ARTEPESCA AS ARTE
-- WHERE
-- PATA.TAP_ID = ARTE.TAP_ID AND
-- PATA.ITC_ID = TIPO.ITC_ID;

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_AREAPESCA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_AREAPESCA (
TP_ID INT NOT NULL,
TAREAP_ID INT NOT NULL,
 PRIMARY KEY (TP_ID, TAREAP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_AREAPESCA_TP_ID FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_AREAPESCA_TAREAP_ID FOREIGN KEY (TAREAP_ID) REFERENCES T_AREAPESCA (TAREAP_ID)
);

--INSERT INTO T_PESCADOR_HAS_T_AREAPESCA (TP_ID, TAREAP_ID)
--SELECT TP_ID, TAREAP_ID FROM T_AREAPESCA_HAS_T_PESCADOR;

---DROP TABLE IF EXISTS T_AREAPESCA_HAS_T_PESCADOR;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADOR_HAS_T_AREAPESCA AS
SELECT PA.TP_ID, PA.TAREAP_ID, AREA.TAREAP_AREAPESCA
FROM T_PESCADOR_HAS_T_AREAPESCA AS PA, T_AREAPESCA AS AREA
WHERE PA.TAREAP_ID = AREA.TAREAP_ID;

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_ARTEPESCA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_ARTEPESCA (
 TP_ID INT NOT NULL,
 TAP_ID INT NOT NULL,
 PRIMARY KEY (TP_ID, TAP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_TIPOARTEPESCA1 FOREIGN KEY (TAP_ID) REFERENCES T_ARTEPESCA (TAP_ID)
);

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADOR_HAS_T_ARTEPESCA AS
SELECT PA.TP_ID, PA.TAP_ID, ARTE.TAP_ARTEPESCA
FROM T_PESCADOR_HAS_T_ARTEPESCA AS PA, T_ARTEPESCA AS ARTE
WHERE PA.TAP_ID = ARTE.TAP_ID;

-- -----------------------------------------------------
-- VIEW V_PESCADOR_HAS_T_TIPOCAPTURADA
-- -----------------------------------------------------
CREATE VIEW V_PESCADOR_HAS_T_TIPOCAPTURADA AS
SELECT PA.TP_ID, PA.ITC_ID, TIPO.ITC_TIPO
FROM T_PESCADOR_HAS_T_TIPOCAPTURADA AS PA, T_TIPOCAPTURADA AS TIPO
WHERE PA.ITC_ID = TIPO.ITC_ID;


-- -----------------------------------------------------
-- VIEW MONITORAMENTO BY FICHA DIARIA
-- -----------------------------------------------------
-- 
CREATE OR REPLACE VIEW v_monitoramentobyficha AS 
 SELECT t_monitoramento.mnt_id, t_monitoramento.mnt_arte, 
    t_monitoramento.mnt_quantidade, t_monitoramento.mnt_monitorado, 
    t_ficha_diaria.fd_id, t_artepesca.tap_artepesca
   FROM t_monitoramento, t_ficha_diaria, t_artepesca
  WHERE t_monitoramento.fd_id = t_ficha_diaria.fd_id AND t_monitoramento.mnt_arte = t_artepesca.tap_id;


Drop view v_arrasto_has_t_pesqueiro;
Drop view v_varapesca_has_t_pesqueiro;
Drop view v_tarrafa_has_t_pesqueiro;
Drop view v_siripoia_has_t_pesqueiro;
Drop view v_ratoeira_has_t_pesqueiro;
Drop view v_mergulho_has_t_pesqueiro;
Drop view v_manzua_has_t_pesqueiro;
Drop view v_linhafundo_has_t_pesqueiro;
Drop view v_linha_has_t_pesqueiro;
Drop view v_jerere_has_t_pesqueiro;
Drop view v_grosseira_has_t_pesqueiro;
Drop view v_coletamanual_has_t_pesqueiro;
Drop view v_emalhe_has_t_pesqueiro;
Drop view v_calao_has_t_pesqueiro;

Drop Table t_calao_has_t_pesqueiro;
Drop Table t_emalhe_has_t_pesqueiro;
Drop Table t_coletamanual_has_t_pesqueiro;
Drop Table t_grosseira_has_t_pesqueiro;
Drop Table t_jerere_has_t_pesqueiro;
Drop Table t_linha_has_t_pesqueiro;
Drop Table t_linhafundo_has_t_pesqueiro;
Drop Table t_manzua_has_t_pesqueiro;
Drop Table t_mergulho_has_t_pesqueiro;
Drop Table t_ratoeira_has_t_pesqueiro;
Drop Table t_siripoia_has_t_pesqueiro;
Drop Table t_tarrafa_has_t_pesqueiro;
Drop Table t_varapesca_has_t_pesqueiro;
Drop Table t_arrastofundo_has_t_pesqueiro;

Drop view v_arrastofundo_has_t_especie_capturada;
Drop view v_varapesca_has_t_especie_capturada;
Drop view v_tarrafa_has_t_especie_capturada;
Drop view v_siripoia_has_t_especie_capturada;
Drop view v_ratoeira_has_t_especie_capturada;
Drop view v_mergulho_has_t_especie_capturada;
Drop view v_manzua_has_t_especie_capturada;
Drop view v_linhafundo_has_t_especie_capturada;
Drop view v_linha_has_t_especie_capturada;
Drop view v_jerere_has_t_especie_capturada;
Drop view v_grosseira_has_t_especie_capturada;
Drop view v_coletamanual_has_t_especie_capturada;
Drop view v_emalhe_has_t_especie_capturada;
Drop view v_calao_has_t_especie_capturada;

Drop Table t_calao_has_t_especie_capturada;
Drop Table t_emalhe_has_t_especie_capturada;
Drop Table t_coletamanual_has_t_especie_capturada;
Drop Table t_grosseira_has_t_especie_capturada;
Drop Table t_jerere_has_t_especie_capturada;
Drop Table t_linha_has_t_especie_capturada;
Drop Table t_linhafundo_has_t_especie_capturada;
Drop Table t_manzua_has_t_especie_capturada;
Drop Table t_mergulho_has_t_especie_capturada;
Drop Table t_ratoeira_has_t_especie_capturada;
Drop Table t_siripoia_has_t_especie_capturada;
Drop Table t_tarrafa_has_t_especie_capturada;
Drop Table t_varapesca_has_t_especie_capturada;
Drop Table t_arrastofundo_has_t_especie_capturada;

Drop table t_arrastofundo;
Drop table t_varapesca;
Drop table t_tarrafa;
Drop table t_siripoia;
Drop table t_ratoeira;
Drop table t_mergulho;
Drop table t_manzua;
Drop table t_linhafundo;
Drop table t_linha;
Drop table t_jerere;
Drop table t_grosseira;
Drop table t_coletamanual;
Drop table t_emalhe;
Drop table t_calao;

-- Table: t_barco

--DROP TABLE t_barco;

CREATE TABLE IF NOT EXISTS t_barco
(
  bar_id serial NOT NULL,
  bar_nome character varying(45),
  CONSTRAINT t_barco_pkey PRIMARY KEY (bar_id)
);
-- Table: t_isca

--DROP TABLE t_isca;

CREATE TABLE IF NOT EXISTS t_isca
(
  isc_id serial NOT NULL,
  isc_tipo character varying(45),
  CONSTRAINT t_isca_pkey PRIMARY KEY (isc_id)
);
-- Table: t_avistamento

-- DROP TABLE t_avistamento;

CREATE TABLE IF NOT EXISTS t_avistamento
(
  avs_id serial NOT NULL,
  avs_descricao character varying(50) NOT NULL,
  CONSTRAINT t_avistamento_pkey PRIMARY KEY (avs_id)
);


-- Table: t_mare



CREATE TABLE IF NOT EXISTS t_mare
(
  mre_id serial NOT NULL,
  mre_tipo character varying(20),
  CONSTRAINT t_mare_pkey PRIMARY KEY (mre_id)
);

-- Table: t_monitoramento

--DROP TABLE t_monitoramento;

CREATE TABLE IF NOT EXISTS t_monitoramento
(
  mnt_id serial NOT NULL,
  mnt_arte integer,
  mnt_quantidade integer,
  mnt_monitorado boolean,
  fd_id integer NOT NULL,
  CONSTRAINT t_monitoramento_pkey PRIMARY KEY (mnt_id),
  CONSTRAINT fk_dsbq_monitoramento_dsbq_ficha_diaria1 FOREIGN KEY (fd_id)
      REFERENCES t_ficha_diaria (fd_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
-- Table: t_arrastofundo


CREATE TABLE IF NOT EXISTS t_arrastofundo
(
  af_id serial NOT NULL,
  af_embarcado boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  af_quantpescadores integer,
  af_dhsaida timestamp without time zone,
  af_dhvolta timestamp without time zone,
  af_diesel double precision,
  af_oleo double precision,
  af_alimento double precision,
  af_gelo double precision,
  af_avistou character varying(100),
  af_subamostra boolean,
  sa_id integer,
  af_obs character varying(100),
  mnt_id integer NOT NULL,
  af_motor boolean,
  CONSTRAINT t_arrastofundo_pkey PRIMARY KEY (af_id),
  CONSTRAINT fk_t_arrastofundo_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_arrastofundo_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_arrastofundo_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_arrastofundo_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_arrastofundo_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

-- Table: t_calao

CREATE TABLE IF NOT EXISTS t_calao
(
  cal_id serial NOT NULL,
  cal_embarcada boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  cal_quantpescadores integer,
  cal_data date,
  cal_tempogasto time without time zone,
  cal_avistou character varying(100),
  cal_subamostra boolean,
  sa_id integer,
  cal_tamanho double precision,
  cal_altura double precision,
  cal_malha double precision,
  cal_numlances integer,
  cal_obs character varying(100),
  mnt_id integer NOT NULL,
  cal_motor boolean,
  CONSTRAINT t_calao_pkey PRIMARY KEY (cal_id),
  CONSTRAINT fk_t_calao_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_calao_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_calao_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_calao_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_calao_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);


CREATE TABLE IF NOT EXISTS t_coletamanual
(
  cml_id serial NOT NULL,
  cml_embarcada boolean,
  bar_id integer NOT NULL,
  tte_id integer NOT NULL,
  tp_id_entrevistado integer NOT NULL,
  cml_quantpescadores integer,
  cml_dhsaida timestamp without time zone,
  cml_dhvolta timestamp without time zone,
  cml_tempogasto time without time zone,
  cml_avistamento character varying(100),
  cml_subamostra boolean,
  sa_id integer,
  cml_obs character varying(100),
  mnt_id integer NOT NULL,
  mre_id integer NOT NULL,
  cml_mreviva boolean,
  cml_motor boolean,
  CONSTRAINT t_coletamanual_pkey PRIMARY KEY (cml_id),
  CONSTRAINT fk_t_coletamanual_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_coletamanual_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_coletamanual_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_coletamanual_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_coletamanual_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT t_coletamanual_t_mare1 FOREIGN KEY (mre_id)
      REFERENCES t_mare (mre_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);


-- Table: t_emalhe
CREATE TABLE IF NOT EXISTS t_emalhe
(
  em_id serial NOT NULL,
  em_embarcado boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  em_quantpescadores integer,
  em_dhlancamento timestamp without time zone,
  em_dhrecolhimento timestamp without time zone,
  em_diesel double precision,
  em_oleo double precision,
  em_alimento double precision,
  em_gelo double precision,
  em_avistou character varying(100),
  em_subamostra boolean,
  sa_id integer,
  em_tamanho double precision,
  em_altura double precision,
  em_numpanos integer,
  em_malha integer,
  em_obs character varying(100),
  mnt_id integer NOT NULL,
  em_motor boolean,
  CONSTRAINT t_emalhe_pkey PRIMARY KEY (em_id),
  CONSTRAINT fk_t_emalhe_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_emalhe_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_emalhe_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_emalhe_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_emalhe_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
-- Table: t_emalhe_has_t_especie_capturada


-- Table: t_grosseira

CREATE TABLE IF NOT EXISTS t_grosseira
(
  grs_id serial NOT NULL,
  grs_embarcada boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  grs_numpescadores integer,
  grs_dhsaida timestamp without time zone NOT NULL,
  grs_dhvolta timestamp without time zone,
  grs_diesel double precision,
  grs_oleo double precision,
  grs_alimento double precision,
  grs_gelo double precision,
  grs_avistou character varying(100),
  grs_numlinhas integer,
  grs_numanzoisplinha integer,
  grs_subamostra boolean,
  sa_id integer,
  isc_id integer NOT NULL,
  grs_obs character varying(100),
  mnt_id integer NOT NULL,
  grs_motor boolean,
  CONSTRAINT t_grosseira_pkey PRIMARY KEY (grs_id),
  CONSTRAINT fk_t_grosseira_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_grosseira_t_isca1 FOREIGN KEY (isc_id)
      REFERENCES t_isca (isc_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_grosseira_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_grosseira_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_grosseira_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_grosseira_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
;
-- Table: t_grosseira_has_t_especie_capturada


-- Table: t_jerere

CREATE TABLE IF NOT EXISTS t_jerere
(
  jre_id serial NOT NULL,
  jre_embarcada boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  jre_quantpescadores integer,
  jre_dhsaida timestamp without time zone,
  jre_dhvolta timestamp without time zone,
  jre_tempogasto time without time zone,
  jre_avistamento character varying(100),
  jre_subamostra boolean,
  sa_id integer,
  jre_numarmadilhas integer,
  jre_obs character varying(100),
  mnt_id integer NOT NULL,
  mre_id integer NOT NULL,
  jre_mreviva boolean,
  jre_motor boolean,
  CONSTRAINT t_jerere_pkey PRIMARY KEY (jre_id),
  CONSTRAINT fk_t_jerere_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_jerere_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_jerere_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_jerere_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_jerere_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT t_jerere_t_mare1 FOREIGN KEY (mre_id)
      REFERENCES t_mare (mre_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
-- Table: t_jerere_has_t_especie_capturada



-- Table: t_linha


CREATE TABLE IF NOT EXISTS t_linha
(
  lin_id serial NOT NULL,
  lin_embarcada boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  lin_numpescadores integer,
  lin_dhsaida timestamp without time zone,
  lin_dhvolta timestamp without time zone,
  lin_diesel double precision,
  lin_oleo double precision,
  lin_alimento double precision,
  lin_gelo double precision,
  lin_avistou character varying(100),
  lin_subamostra boolean,
  sa_id integer,
  lin_numlinhas integer,
  lin_numanzoisplinha integer,
  isc_id integer NOT NULL,
  mnt_id integer NOT NULL,
  lin_motor boolean,
  lin_obs character varying(100),
  CONSTRAINT t_linha_pkey PRIMARY KEY (lin_id),
  CONSTRAINT fk_t_linha_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_linha_t_isca1 FOREIGN KEY (isc_id)
      REFERENCES t_isca (isc_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_linha_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_linha_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_linha_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_linha_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
-- Table: t_linha_has_t_especie_capturada



-- Table: t_linhafundo


CREATE TABLE IF NOT EXISTS t_linhafundo
(
  lf_id serial NOT NULL,
  lf_embarcada boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  lf_quantpescadores integer,
  lf_dhsaida timestamp without time zone,
  lf_dhvolta timestamp without time zone,
  lf_tempogasto time without time zone,
  lf_diesel double precision,
  lf_oleo double precision,
  lf_alimento double precision,
  lf_gelo double precision,
  lf_avistamento character varying(100),
  lf_subamostra boolean,
  sa_id integer,
  lf_numlinhas integer,
  lf_numanzoisplinha integer,
  isc_id integer,
  lf_obs character varying(100),
  mnt_id integer NOT NULL,
  mre_id integer NOT NULL,
  lf_mreviva boolean,
  lf_motor boolean,
  CONSTRAINT t_linhafundo_pkey PRIMARY KEY (lf_id),
  CONSTRAINT fk_t_linhafundo_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_linhafundo_t_isca1 FOREIGN KEY (isc_id)
      REFERENCES t_isca (isc_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_linhafundo_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_linhafundo_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_linhafundo_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_linhafundo_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT t_linhafundo_t_mare1 FOREIGN KEY (mre_id)
      REFERENCES t_mare (mre_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);



CREATE TABLE IF NOT EXISTS t_manzua
(
  man_id serial NOT NULL,
  man_embarcada boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  man_quantpescadores integer,
  man_dhsaida timestamp without time zone,
  man_dhvolta timestamp without time zone,
  man_tempogasto time without time zone,
  man_avistamento character varying(100),
  man_subamostra boolean,
  sa_id integer,
  man_numarmadilhas integer,
  man_obs character varying(100),
  mnt_id integer NOT NULL,
  mre_id integer NOT NULL,
  man_mreviva boolean,
  man_motor boolean,
  CONSTRAINT t_manzua_pkey PRIMARY KEY (man_id),
  CONSTRAINT fk_t_manzua_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_manzua_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_manzua_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_manzua_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_manzua_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT t_manzua_t_mare1 FOREIGN KEY (mre_id)
      REFERENCES t_mare (mre_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);


CREATE TABLE IF NOT EXISTS t_mergulho
(
  mer_id serial NOT NULL,
  mer_embarcada boolean,
  bar_id integer NOT NULL,
  tte_id integer NOT NULL,
  tp_id_entrevistado integer NOT NULL,
  mer_quantpescadores integer,
  mer_dhsaida timestamp without time zone,
  mer_dhvolta timestamp without time zone,
  mer_tempogasto time without time zone,
  mer_avistou character varying(100),
  mer_subamostra boolean,
  sa_id integer,
  mnt_id integer NOT NULL,
  mer_obs character varying(100),
  mre_id integer,
  mer_mreviva boolean,
  mer_motor boolean,
  CONSTRAINT t_mergulho_pkey PRIMARY KEY (mer_id),
  CONSTRAINT fk_t_mergulho_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_mergulho_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_mergulho_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_mergulho_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_mergulho_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT t_mergulho_t_mare1 FOREIGN KEY (mre_id)
      REFERENCES t_mare (mre_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);


CREATE TABLE IF NOT EXISTS t_ratoeira
(
  rat_id serial NOT NULL,
  rat_embarcada boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  rat_quantpescadores integer,
  rat_dhsaida timestamp without time zone,
  rat_dhvolta timestamp without time zone,
  rat_tempogasto time without time zone,
  rat_avistamento character varying(100),
  rat_subamostra boolean,
  sa_id integer,
  rat_numarmadilhas integer,
  rat_obs character varying(100),
  mnt_id integer NOT NULL,
  mre_id integer NOT NULL,
  rat_mreviva boolean,
  rat_motor boolean,
  CONSTRAINT t_ratoeira_pkey PRIMARY KEY (rat_id),
  CONSTRAINT fk_t_ratoeira_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_ratoeira_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_ratoeira_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_ratoeira_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_ratoeira_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT t_ratoeira_t_mare1 FOREIGN KEY (mre_id)
      REFERENCES t_mare (mre_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);


CREATE TABLE IF NOT EXISTS t_siripoia
(
  sir_id serial NOT NULL,
  sir_embarcada boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  sir_quantpescadores integer,
  sir_dhsaida timestamp without time zone,
  sir_dhvolta timestamp without time zone,
  sir_tempogasto time without time zone,
  sir_avistamento character varying(100),
  sir_subamostra boolean,
  sa_id integer,
  sir_numarmadilhas integer,
  sir_obs character varying(100),
  mnt_id integer NOT NULL,
  mre_id integer NOT NULL,
  sir_mreviva boolean,
  sir_motor boolean,
  CONSTRAINT t_siripoia_pkey PRIMARY KEY (sir_id),
  CONSTRAINT fk_t_siripoia_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_siripoia_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_siripoia_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_siripoia_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_siripoia_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT t_siripoia_t_mare1 FOREIGN KEY (mre_id)
      REFERENCES t_mare (mre_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);


CREATE TABLE IF NOT EXISTS t_tarrafa
(
  tar_id serial NOT NULL,
  tar_embarcado boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  tar_quantpescadores integer,
  tar_data date,
  tar_tempogasto time without time zone,
  tar_avistou character varying(100),
  tar_subamostra boolean,
  sa_id integer,
  tar_roda double precision,
  tar_altura double precision,
  tar_malha double precision,
  tar_numlances integer,
  mnt_id integer NOT NULL,
  tar_obs character varying(100),
  tar_motor boolean,
  CONSTRAINT t_tarrafa_pkey PRIMARY KEY (tar_id),
  CONSTRAINT fk_t_tarrafa_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_tarrafa_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_tarrafa_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_tarrafa_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_tarrafa_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);


CREATE TABLE IF NOT EXISTS t_varapesca
(
  vp_id serial NOT NULL,
  vp_embarcada boolean,
  bar_id integer,
  tte_id integer,
  tp_id_entrevistado integer NOT NULL,
  vp_quantpescadores integer,
  vp_dhsaida timestamp without time zone,
  vp_dhvolta timestamp without time zone,
  vp_tempogasto time without time zone,
  vp_diesel double precision,
  vp_oleo double precision,
  vp_alimento double precision,
  vp_gelo double precision,
  vp_avistamento character varying(100),
  vp_subamostra boolean,
  sa_id integer,
  vp_numanzoisplinha integer,
  vp_numlinhas integer,
  isc_id integer,
  vp_obs character varying(100),
  mnt_id integer NOT NULL,
  mre_id integer NOT NULL,
  vp_mreviva boolean,
  vp_motor boolean,
  CONSTRAINT t_varapesca_pkey PRIMARY KEY (vp_id),
  CONSTRAINT fk_t_varapesca_t_barco1 FOREIGN KEY (bar_id)
      REFERENCES t_barco (bar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_varapesca_t_isca1 FOREIGN KEY (isc_id)
      REFERENCES t_isca (isc_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_varapesca_t_monitoramento1 FOREIGN KEY (mnt_id)
      REFERENCES t_monitoramento (mnt_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_varapesca_t_pescador1 FOREIGN KEY (tp_id_entrevistado)
      REFERENCES t_pescador (tp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_varapesca_t_subamostra1 FOREIGN KEY (sa_id)
      REFERENCES t_subamostra (sa_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_varapesca_t_tipoembarcacao1 FOREIGN KEY (tte_id)
      REFERENCES t_tipoembarcacao (tte_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT t_varapesca_t_mare1 FOREIGN KEY (mre_id)
      REFERENCES t_mare (mre_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);



CREATE TABLE IF NOT EXISTS t_arrastofundo_has_t_especie_capturada
(
  spc_af_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  af_id integer NOT NULL,
  CONSTRAINT t_arrastofundo_has_t_especie_capturada_pkey PRIMARY KEY (spc_af_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_arrastofundo1 FOREIGN KEY (af_id)
      REFERENCES t_arrastofundo (af_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_calao_has_t_especie_capturada
(
  spc_cal_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  cal_id integer NOT NULL,
  CONSTRAINT t_calao_has_t_especie_capturada_pkey PRIMARY KEY (spc_cal_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_calao1 FOREIGN KEY (cal_id)
      REFERENCES t_calao (cal_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_coletamanual_has_t_especie_capturada
(
  spc_cml_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  cml_id integer NOT NULL,
  CONSTRAINT t_coletamanual_has_t_especie_capturada_pkey PRIMARY KEY (spc_cml_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_coletamanual1 FOREIGN KEY (cml_id)
      REFERENCES t_coletamanual (cml_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);


CREATE TABLE IF NOT EXISTS t_emalhe_has_t_especie_capturada
(
  spc_em_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  em_id integer NOT NULL,
  CONSTRAINT t_emalhe_has_t_especie_capturada_pkey PRIMARY KEY (spc_em_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_emalhe1 FOREIGN KEY (em_id)
      REFERENCES t_emalhe (em_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_grosseira_has_t_especie_capturada
(
  spc_grs_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  grs_id integer NOT NULL,
  CONSTRAINT t_grosseira_has_t_especie_capturada_pkey PRIMARY KEY (spc_grs_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_grosseira1 FOREIGN KEY (grs_id)
      REFERENCES t_grosseira (grs_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);


CREATE TABLE IF NOT EXISTS t_jerere_has_t_especie_capturada
(
  spc_jre_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  jre_id integer NOT NULL,
  CONSTRAINT t_jerere_has_t_especie_capturada_pkey PRIMARY KEY (spc_jre_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_jerere1 FOREIGN KEY (jre_id)
      REFERENCES t_jerere (jre_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_linha_has_t_especie_capturada
(
  spc_lin_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  lin_id integer NOT NULL,
  CONSTRAINT t_linha_has_t_especie_capturada_pkey PRIMARY KEY (spc_lin_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_calao1 FOREIGN KEY (lin_id)
      REFERENCES t_linha (lin_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_linhafundo_has_t_especie_capturada
(
  spc_lf_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  lf_id integer NOT NULL,
  CONSTRAINT t_linhafundo_has_t_especie_capturada_pkey PRIMARY KEY (spc_lf_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_linhafundo1 FOREIGN KEY (lf_id)
      REFERENCES t_linhafundo (lf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_manzua_has_t_especie_capturada
(
  spc_man_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  man_id integer NOT NULL,
  CONSTRAINT t_manzua_has_t_especie_capturada_pkey PRIMARY KEY (spc_man_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_manzua1 FOREIGN KEY (man_id)
      REFERENCES t_manzua (man_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_mergulho_has_t_especie_capturada
(
  spc_mer_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  mer_id integer NOT NULL,
  CONSTRAINT t_mergulho_has_t_especie_capturada_pkey PRIMARY KEY (spc_mer_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_mergulho1 FOREIGN KEY (mer_id)
      REFERENCES t_mergulho (mer_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_ratoeira_has_t_especie_capturada
(
  spc_rat_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  rat_id integer NOT NULL,
  CONSTRAINT t_ratoeira_has_t_especie_capturada_pkey PRIMARY KEY (spc_rat_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_ratoeira1 FOREIGN KEY (rat_id)
      REFERENCES t_ratoeira (rat_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_siripoia_has_t_especie_capturada
(
  spc_sir_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  sir_id integer NOT NULL,
  CONSTRAINT t_siripoia_has_t_especie_capturada_pkey PRIMARY KEY (spc_sir_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_siripoia1 FOREIGN KEY (sir_id)
      REFERENCES t_siripoia (sir_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_tarrafa_has_t_especie_capturada
(
  spc_tar_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  tar_id integer NOT NULL,
  CONSTRAINT t_tarrafa_has_t_especie_capturada_pkey PRIMARY KEY (spc_tar_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_calao1 FOREIGN KEY (tar_id)
      REFERENCES t_tarrafa (tar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_varapesca_has_t_especie_capturada
(
  spc_vp_id serial NOT NULL,
  
  spc_quantidade integer,
  spc_peso_kg float,
  spc_preco float,
  esp_id integer NOT NULL,
  vp_id integer NOT NULL,
  CONSTRAINT t_varapesca_has_t_especie_capturada_pkey PRIMARY KEY (spc_vp_id),
  CONSTRAINT fk_dsbq_especie_capturada_dsbq_especie1 FOREIGN KEY (esp_id)
      REFERENCES t_especie (esp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_especie_capturada_t_varapesca1 FOREIGN KEY (vp_id)
      REFERENCES t_varapesca (vp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);


-- ENTREVISTAS HAS ESPECIES CAPTURADAS



CREATE TABLE IF NOT EXISTS t_arrastofundo_has_t_pesqueiro
(
  af_paf_id serial,
  af_id integer NOT NULL,
  paf_id integer NOT NULL,
  t_tempopesqueiro time without time zone,
  CONSTRAINT t_arrastofundo_has_t_pesqueiro_pkey PRIMARY KEY (af_paf_id),
  CONSTRAINT fk_t_arrastofundo_has_t_pesqueiro_t_arrastofundo1 FOREIGN KEY (af_id)
      REFERENCES t_arrastofundo (af_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_arrastofundo_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_calao_has_t_pesqueiro
(
  cal_paf_id serial,
  cal_id integer NOT NULL,
  paf_id integer NOT NULL,
  PRIMARY KEY (cal_paf_id),
  CONSTRAINT fk_t_calao_has_t_pesqueiro_t_calao1 FOREIGN KEY (cal_id)
      REFERENCES t_calao (cal_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_calao_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_coletamanual_has_t_pesqueiro
(
  cml_paf_id serial,
  cml_id integer NOT NULL,
  paf_id integer NOT NULL,
  t_tempoapesqueiro time without time zone,
  t_distapesqueiro double precision,
  PRIMARY KEY (cml_paf_id),
  CONSTRAINT fk_t_coletamanual_has_t_pesqueiro_t_coletamanual1 FOREIGN KEY (cml_id)
      REFERENCES t_coletamanual (cml_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_coletamanual_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_emalhe_has_t_pesqueiro
(
  em_paf_id serial,
  em_id integer NOT NULL,
  paf_id integer NOT NULL,
  PRIMARY KEY (em_paf_id),
  CONSTRAINT fk_t_emalhe_has_t_pesqueiro_t_emalhe1 FOREIGN KEY (em_id)
      REFERENCES t_emalhe (em_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_emalhe_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_grosseira_has_t_pesqueiro
(
  grs_paf_id serial,
  grs_id integer NOT NULL,
  paf_id integer NOT NULL,
  t_tempoapesqueiro time without time zone,
  PRIMARY KEY (grs_paf_id),
  CONSTRAINT fk_t_grosseira_has_t_pesqueiro_t_grosseira1 FOREIGN KEY (grs_id)
      REFERENCES t_grosseira (grs_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_grosseira_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_jerere_has_t_pesqueiro
(
  jre_paf_id serial,
  jre_id integer NOT NULL,
  paf_id integer NOT NULL,
  t_tempoapesqueiro time without time zone,
  t_distapesqueiro double precision,
  PRIMARY KEY (jre_paf_id),
  CONSTRAINT fk_t_jerere_has_t_pesqueiro_t_jerere1 FOREIGN KEY (jre_id)
      REFERENCES t_jerere (jre_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_jerere_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS t_linha_has_t_pesqueiro
(
  lin_paf_id serial,
  lin_id integer NOT NULL,
  paf_id integer NOT NULL,
  t_tempoapesqueiro time without time zone,
  PRIMARY KEY (lin_paf_id),
  CONSTRAINT fk_t_tarrafa_has_t_pesqueiro_t_linha1 FOREIGN KEY (lin_id)
      REFERENCES t_linha (lin_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_tarrafa_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_linhafundo_has_t_pesqueiro
(
  lf_paf_id serial,
  lf_id integer NOT NULL,
  paf_id integer NOT NULL,
  t_tempoapesqueiro time without time zone,
  t_distapesqueiro double precision,
  PRIMARY KEY (lf_paf_id),
  CONSTRAINT fk_t_linhafundo_has_t_pesqueiro_t_linhafundo1 FOREIGN KEY (lf_id)
      REFERENCES t_linhafundo (lf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_linhafundo_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_manzua_has_t_pesqueiro
(
  man_paf_id serial,
  man_id integer NOT NULL,
  paf_id integer NOT NULL,
  t_tempoapesqueiro time without time zone,
  t_distapesqueiro double precision,
  PRIMARY KEY (man_paf_id),
  CONSTRAINT fk_t_manzua_has_t_pesqueiro_t_manzua1 FOREIGN KEY (man_id)
      REFERENCES t_manzua (man_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_manzua_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_mergulho_has_t_pesqueiro
(
  mer_paf_id serial,
  mer_id integer NOT NULL,
  paf_id integer NOT NULL,
  t_tempoapesqueiro time without time zone,
  t_distapesqueiro double precision,
  PRIMARY KEY (mer_paf_id),
  CONSTRAINT fk_t_mergulho_has_t_pesqueiro_t_mergulho1 FOREIGN KEY (mer_id)
      REFERENCES t_mergulho (mer_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_mergulho_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_ratoeira_has_t_pesqueiro
(
  rat_paf_id serial,
  rat_id integer NOT NULL,
  paf_id integer NOT NULL,
  t_tempoapesqueiro time without time zone,
  t_distapesqueiro double precision,
  PRIMARY KEY (rat_paf_id),
  CONSTRAINT fk_t_ratoeira_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_ratoeira_has_t_pesqueiro_t_ratoeira1 FOREIGN KEY (rat_id)
      REFERENCES t_ratoeira (rat_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_siripoia_has_t_pesqueiro
(
  sir_paf_id serial,
  sir_id integer NOT NULL,
  paf_id integer NOT NULL,
  t_tempoapesqueiro time without time zone,
  t_distapesqueiro double precision,
  PRIMARY KEY (sir_paf_id),
  CONSTRAINT fk_t_siripoia_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_siripoia_has_t_pesqueiro_t_siripoia1 FOREIGN KEY (sir_id)
      REFERENCES t_siripoia (sir_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_tarrafa_has_t_pesqueiro
(
  tar_paf_id serial,
  tar_id integer NOT NULL,
  paf_id integer NOT NULL,
  PRIMARY KEY (tar_paf_id),
  CONSTRAINT fk_t_tarrafa_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_tarrafa_has_t_pesqueiro_t_tarrafa1 FOREIGN KEY (tar_id)
      REFERENCES t_tarrafa (tar_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS t_varapesca_has_t_pesqueiro
(
  vp_paf_id serial,
  vp_id integer NOT NULL,
  paf_id integer NOT NULL,
  t_tempoapesqueiro time without time zone,
  t_distapesqueiro double precision,
  PRIMARY KEY (vp_paf_id),
  CONSTRAINT fk_t_varapesca_has_t_pesqueiro_t_pesqueiro_af1 FOREIGN KEY (paf_id)
      REFERENCES t_pesqueiro_af (paf_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_t_varapesca_has_t_pesqueiro_t_varapesca1 FOREIGN KEY (vp_id)
      REFERENCES t_varapesca (vp_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);




CREATE VIEW V_ARRASTO_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.AF_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.T_TEMPOPESQUEIRO, ENTPESQ.AF_PAF_ID
FROM T_ARRASTOFUNDO AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_ARRASTOFUNDO_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.AF_ID = ENTPESQ.AF_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;

CREATE VIEW V_EMALHE_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.EM_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.EM_PAF_ID
FROM T_EMALHE AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_EMALHE_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.EM_ID = ENTPESQ.EM_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;

CREATE VIEW V_CALAO_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.CAL_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.CAL_PAF_ID
FROM T_CALAO AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_CALAO_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.CAL_ID = ENTPESQ.CAL_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;

CREATE VIEW V_TARRAFA_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.TAR_ID, PESQUEIRO.PAF_PESQUEIRO,ENTPESQ.TAR_PAF_ID
FROM T_TARRAFA AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_TARRAFA_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.TAR_ID = ENTPESQ.TAR_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;

CREATE VIEW V_LINHA_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.LIN_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.T_TEMPOAPESQUEIRO, ENTPESQ.LIN_PAF_ID
FROM T_LINHA AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_LINHA_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.LIN_ID = ENTPESQ.LIN_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;

CREATE VIEW V_GROSSEIRA_HAS_T_PESQUEIRO AS 
SELECT ENTREVISTA.GRS_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.T_TEMPOAPESQUEIRO, ENTPESQ.GRS_PAF_ID
FROM T_GROSSEIRA AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_GROSSEIRA_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.GRS_ID = ENTPESQ.GRS_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;

CREATE VIEW V_MERGULHO_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.MER_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.T_TEMPOAPESQUEIRO, ENTPESQ.T_DISTAPESQUEIRO, ENTPESQ.MER_PAF_ID
FROM T_MERGULHO AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_MERGULHO_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.MER_ID = ENTPESQ.MER_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;


CREATE VIEW V_COLETAMANUAL_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.CML_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.T_TEMPOAPESQUEIRO, ENTPESQ.T_DISTAPESQUEIRO, ENTPESQ.CML_PAF_ID
FROM T_COLETAMANUAL AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_COLETAMANUAL_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.CML_ID = ENTPESQ.CML_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;

CREATE VIEW V_VARAPESCA_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.VP_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.T_TEMPOAPESQUEIRO, ENTPESQ.T_DISTAPESQUEIRO, ENTPESQ.VP_PAF_ID
FROM T_VARAPESCA AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_VARAPESCA_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.VP_ID = ENTPESQ.VP_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;

CREATE VIEW V_LINHAFUNDO_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.LF_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.T_TEMPOAPESQUEIRO, ENTPESQ.T_DISTAPESQUEIRO, ENTPESQ.LF_PAF_ID
FROM T_LINHAFUNDO AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_LINHAFUNDO_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.LF_ID = ENTPESQ.LF_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;


CREATE VIEW V_JERERE_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.JRE_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.T_TEMPOAPESQUEIRO, ENTPESQ.T_DISTAPESQUEIRO, ENTPESQ.JRE_PAF_ID
FROM T_JERERE AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_JERERE_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.JRE_ID = ENTPESQ.JRE_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;


CREATE VIEW V_SIRIPOIA_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.SIR_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.T_TEMPOAPESQUEIRO, ENTPESQ.T_DISTAPESQUEIRO, ENTPESQ.SIR_PAF_ID
FROM T_SIRIPOIA AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_SIRIPOIA_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.SIR_ID = ENTPESQ.SIR_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;


CREATE VIEW V_MANZUA_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.MAN_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.T_TEMPOAPESQUEIRO, ENTPESQ.T_DISTAPESQUEIRO, ENTPESQ.MAN_PAF_ID
FROM T_MANZUA AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_MANZUA_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.MAN_ID = ENTPESQ.MAN_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;


CREATE VIEW V_RATOEIRA_HAS_T_PESQUEIRO AS
SELECT ENTREVISTA.RAT_ID, PESQUEIRO.PAF_PESQUEIRO, ENTPESQ.T_TEMPOAPESQUEIRO, ENTPESQ.T_DISTAPESQUEIRO, ENTPESQ.RAT_PAF_ID
FROM T_RATOEIRA AS ENTREVISTA, T_PESQUEIRO_AF AS PESQUEIRO, T_RATOEIRA_HAS_T_PESQUEIRO AS ENTPESQ
WHERE ENTREVISTA.RAT_ID = ENTPESQ.RAT_ID AND PESQUEIRO.PAF_ID = ENTPESQ.PAF_ID;


--ESPECIES CAPTURADAS POR ENTREVISTAS (VIEWS)

CREATE VIEW V_ARRASTOFUNDO_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.AF_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_AF_ID
FROM T_ARRASTOFUNDO AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_ARRASTOFUNDO_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.AF_ID = ESPCAPT.AF_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_CALAO_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.CAL_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_CAL_ID
FROM T_CALAO AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_CALAO_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.CAL_ID = ESPCAPT.CAL_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_EMALHE_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.EM_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_EM_ID
FROM T_EMALHE AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_EMALHE_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.EM_ID = ESPCAPT.EM_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_TARRAFA_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.TAR_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_TAR_ID
FROM T_TARRAFA AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_TARRAFA_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.TAR_ID = ESPCAPT.TAR_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_LINHA_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.LIN_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_LIN_ID
FROM T_LINHA AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_LINHA_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.LIN_ID = ESPCAPT.LIN_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_GROSSEIRA_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.GRS_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_GRS_ID
FROM T_GROSSEIRA AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_GROSSEIRA_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.GRS_ID = ESPCAPT.GRS_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_MERGULHO_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.MER_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_MER_ID
FROM T_MERGULHO AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_MERGULHO_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.MER_ID = ESPCAPT.MER_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_COLETAMANUAL_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.CML_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_CML_ID
FROM T_COLETAMANUAL AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_COLETAMANUAL_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.CML_ID = ESPCAPT.CML_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_VARAPESCA_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.VP_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_VP_ID
FROM T_VARAPESCA AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_VARAPESCA_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.VP_ID = ESPCAPT.VP_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_LINHAFUNDO_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.LF_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_LF_ID
FROM T_LINHAFUNDO AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_LINHAFUNDO_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.LF_ID = ESPCAPT.LF_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_JERERE_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.JRE_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_JRE_ID
FROM T_JERERE AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_JERERE_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.JRE_ID = ESPCAPT.JRE_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_SIRIPOIA_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.SIR_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_SIR_ID
FROM T_SIRIPOIA AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_SIRIPOIA_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.SIR_ID = ESPCAPT.SIR_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_MANZUA_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.MAN_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_MAN_ID
FROM T_MANZUA AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_MANZUA_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.MAN_ID = ESPCAPT.MAN_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;

CREATE VIEW V_RATOEIRA_HAS_T_ESPECIE_CAPTURADA AS
SELECT ENTREVISTA.RAT_ID, ESPECIE.ESP_NOME_COMUM, ESPCAPT.SPC_QUANTIDADE, ESPCAPT.SPC_PESO_KG, ESPCAPT.SPC_PRECO, ESPCAPT.SPC_RAT_ID
FROM T_RATOEIRA AS ENTREVISTA, T_ESPECIE AS ESPECIE, T_RATOEIRA_HAS_T_ESPECIE_CAPTURADA AS ESPCAPT
WHERE ENTREVISTA.RAT_ID = ESPCAPT.RAT_ID AND ESPECIE.ESP_ID = ESPCAPT.ESP_ID;


--Visualizações

CREATE OR REPLACE VIEW v_entrevista_arrasto AS 
 SELECT entrevista.af_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_arrastofundo as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;

CREATE OR REPLACE VIEW v_entrevista_calao AS 
 SELECT entrevista.cal_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_calao as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;

CREATE OR REPLACE VIEW v_entrevista_coletamanual AS 
 SELECT entrevista.cml_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_coletamanual as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;

CREATE OR REPLACE VIEW v_entrevista_emalhe AS 
 SELECT entrevista.em_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_emalhe as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;


CREATE OR REPLACE VIEW v_entrevista_grosseira AS 
 SELECT entrevista.cml_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_grosseira as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;

CREATE OR REPLACE VIEW v_entrevista_grosseira AS 
 SELECT entrevista.grs_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_grosseira as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;


CREATE OR REPLACE VIEW v_entrevista_jerere AS 
 SELECT entrevista.jre_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_jerere as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;


CREATE OR REPLACE VIEW v_entrevista_linha AS 
 SELECT entrevista.lin_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_linha as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;


CREATE OR REPLACE VIEW v_entrevista_linhafundo AS 
 SELECT entrevista.lf_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_linhafundo as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;


CREATE OR REPLACE VIEW v_entrevista_manzua AS 
 SELECT entrevista.man_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_manzua as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;

CREATE OR REPLACE VIEW v_entrevista_mergulho AS 
 SELECT entrevista.mer_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_mergulho as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;


CREATE OR REPLACE VIEW v_entrevista_ratoeira AS 
 SELECT entrevista.rat_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_ratoeira as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;


CREATE OR REPLACE VIEW v_entrevista_siripoia AS 
 SELECT entrevista.sir_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_siripoia as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;

CREATE OR REPLACE VIEW v_entrevista_varapesca AS 
 SELECT entrevista.vp_id, pescador.tp_nome, barco.bar_nome, monitoramento.mnt_id, fichadiaria.fd_id
   FROM t_varapesca as entrevista, t_pescador as pescador, t_barco as barco, t_monitoramento as monitoramento, t_ficha_diaria as fichadiaria 
  WHERE entrevista.tp_id_entrevistado = pescador.tp_id AND entrevista.bar_id = barco.bar_id AND entrevista.mnt_id = monitoramento.mnt_id AND monitoramento.fd_id = fichadiaria.fd_id;










